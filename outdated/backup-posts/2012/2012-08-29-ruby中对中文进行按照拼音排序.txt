# ruby中对中文进行按照拼音排序

## 方法就是在排序时候把字符集转为GBK然后ruby可以按拼音排序

用ruby的 String#encode方法
http://ruby-doc.org/core-1.9.3/String.html#method-i-encode

    encode(encoding [, options] ) → str click to toggle source
    encode(dst_encoding, src_encoding [, options] ) → str
	
把一个中文字符从utf-8转换为GBK，方法是

     str.encode("gbk, "utf-8")
	 
大小写似乎没有区别！

这个拼音排序也是不准确的，因为：

1、有些汉字ruby不知道拼音是什么，排到最后
2、汉字多音字，就看选哪个出来排了

## 实际例子

    irb(main):019:0> c
    => ["浙江", "湖南", "安徽", "广东", "重庆"]
    irb(main):020:0> c.sort {|x,y| x.encode("GBK", "utf-8") <=> y.encode("GBK", "utf-8")}
    => ["安徽", "广东", "湖南", "浙江", "重庆"]

看到了么，我们知道重庆念chong2，但它多音字还年重zhong4，因此被排在了最后。

     c.sort {|x,y| x.encode("GBK", "utf-8") <=> y.encode("GBK", "utf-8")}
     => ["安徽", "广东", "湖南", "浙江", "重庆", "鑫"]

明显输入不忍是鑫xin1，因此排到最后，比Z还靠后。
 
## 有些utf-8是不能转换为gbk的！
     
	index_generator.rb:18:in `encode': U+200F from UTF-8 to GBK (Encoding::UndefinedConversionError)

错误信息！


## 参考了 

> 用了server/console做了验证
> >> conv = Iconv.new("GBK", "utf-8")
> => #<Iconv:0xb6dc1f70>
> >> c=%w(浙江 湖南 安徽 广东)
> => ["浙江", "湖南", "安徽", "广东"]
> >> b=c.sort
> => ["安徽", "广东", "浙江", "湖南"]
> >> b=c.sort {|x,y| conv.iconv(x) <=> conv.iconv(y)}
> => ["安徽", "广东", "湖南", "浙江"]
> 恩，现在看来这个方法是可行的
> blueteeth —— 2009年04月04日 @10:51 pm
http://blog.donews.com/jenniferweng/archive/2006/08/07/991039.aspx

但是ruby1.9中已经不推荐使用iconv了。

