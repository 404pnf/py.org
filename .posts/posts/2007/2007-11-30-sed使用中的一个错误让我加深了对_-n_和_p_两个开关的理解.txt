# sed使用中的一个错误让我加深了对 -n 和 p 两个开关的理解

sed使用中的一个错误让我加深了对 -n 和 p 两个开关的理解

## 需要解决的问题


有一个文件，有1很多标题，看例子

---

1 您的个人信息

很多文字。。。

2 阅读《不告诉你什么杂志》的目的

很多文字。。。

3 阅读习惯和爱好

很多文字。。。

4 关于您对加注释文章的看法

很多文字。。。
...

---

现在我要让每个标题有html的段落标识。就是标题的最前面和最后面分别加和

下面是我的脚本，这是正确的。虽然我还是建议您不要直接用-i，而是重定向 > test4.html

	    sed 's/^\([0-9].*$\)/
\1/g' test3.html -i
  

	    sed  's/^\([0-9].*$\)/\1/g' test3.html -i




## 我开始的时候错误地应用了 -n 和 p !!!

我在检测我脚本做了什么修改的时候总用 -n p

比如上面的脚本先看看它做了什么修改对文章

          sed -n 's/^\([0-9].*$\)/\1/gp' test3.html 


-n 的意思是不打印修改后结果，修改什么都不输出。p是打印的意思。我两个放在一起用就之输出发生改变的行。很方便看到哪些行改变了，改变的结果是什么。非常方便。

这时的输出应该只有那些修改的行。那些“很多文字”都不会被输出。只输出更改的行。

--1 您的个人信息2 阅读《不告诉你什么杂志》的目的3 阅读习惯和爱好4 关于您对加注释文章的看法

...

--

我一看结果正确，非常兴奋，直接在上面代码加了个 -i ，直接更新原文的意思。

您猜怎么着？

它是直接用输出的结果去更新原文！就是说原文全部删除，保留的只是那些修改了的行！当然不是我要的结果。

还好我还有一份原文。重来。用文件重定向方便。但是我完全有信心不加那个 -n p 就没问题，所以再次编辑那个命令，输出-n p两个控制就好了。

## 不犯错误对很多命令就无法真正的理解清楚啊！！

哎。  ：） 

之后我对文件又进行了多个修改用sed，再没出现类似错误。以后应该不会了
