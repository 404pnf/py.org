# drupal有了git库了

[tags] drupal,git, [/tags]
http://git.drupalcode.org/

以后跟踪模块变化方便多了。clone一个库之后，每次看有没有更新直接git pull就可以了



http://dev.mysql.com/doc/refman/5.1/en/query-cache.html
Be cautious about sizing the query cache excessively large, which increases the overhead required to maintain the cache, possibly beyond the benefit of enabling it. Sizes in tens of megabytes are usually beneficial. Sizes in the hundreds of megabytes might not be. 


另一文章
Pay close attention to the values of Qcache_free_blocks  and Qcache_free_memory. If the ratio is relatively high it indicates that the cache memory has become rather fragmented which can also be a rather nasty and hard to figure out gotcha. If this ever occurs, it can be temporarily fixed using:
      mysql> FLUSH QUERY CACHE;
http://www.docplanet.org/mysql/mysql-query-cache-in-depth/




    * query_cache_limit：允许 Cache 的单条 Query 结果集的最大容量，默认是1MB，超过此参数设置的 Query 结果集将不会被 Cache
    * query_cache_min_res_unit：设置 Query Cache 中每次分配内存的最小空间大小，也就是每个 Query 的 Cache 最小占用的内存空间大小
    * query_cache_size：设置 Query Cache 所使用的内存大小，默认值为0，大小必须是1024的整数倍，如果不是整数倍，MySQL 会自动调整降低最小量以达到1024的倍数
    * query_cache_type：控制 Query Cache 功能的开关，可以设置为0(OFF),1(ON)和2(DEMAND)三种，意义分别如下：
          o 0(OFF)：关闭 Query Cache 功能，任何情况下都不会使用 Query Cache
          o 1(ON)：开启 Query Cache 功能，但是当 SELECT 语句中使用的 SQL_NO_CACHE 提示后，将不使用Query Cache
          o 2(DEMAND)：开启 Query Cache 功能，但是只有当 SELECT 语句中使用了 SQL_CACHE 提示后，才使用 Query Cache
    * query_cache_wlock_invalidate：控制当有写锁定发生在表上的时刻是否先失效该表相关的 Query Cache，如果设置为 1(TRUE)，则在写锁定的同时将失效该表相关的所有 Query Cache，如果设置为0(FALSE)则在锁定时刻仍然允许读取该表相关的 Query Cache。
	
http://isky000.com/database/mysql-query-cache-summary





2011-09-27